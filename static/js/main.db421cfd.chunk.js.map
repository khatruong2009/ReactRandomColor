{"version":3,"sources":["Components/Color.js","App.js","reportWebVitals.js","index.js"],"names":["Color","props","className","color","onClick","handleClick","App","useState","randomColor","setRandomColor","style","backgroundColor","Math","floor","random","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAceA,G,MAZD,SAACC,GACb,OACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,UAAf,UACE,wDACA,qDAAwBD,EAAME,SAC9B,wBAAQC,QAASH,EAAMI,YAAvB,8BCaOC,MAjBf,WAAgB,IAAD,EAEyBC,mBAAS,OAFlC,mBAENC,EAFM,KAEOC,EAFP,KAUb,OACE,sBAAMC,MAAO,CAACC,gBAAgB,IAAD,OAAMH,IAAnC,SACE,cAAC,EAAD,CAAOL,MAAOK,EAAaH,YAR/B,WACE,IAAIF,EAAQS,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,IACxDN,EAAeN,SCEJa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.db421cfd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Color = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"content\">\r\n        <h1>Random Color Generator</h1>\r\n        <p>Color hex value is #{props.color}</p>\r\n        <button onClick={props.handleClick}>New Color</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Color;","import React, { useState } from 'react';\nimport './App.css';\nimport Color from \"./Components/Color\";\n\nfunction App() {\n\n  const [randomColor, setRandomColor] = useState(\"fff\")\n\n  function handleClick() {\n    var color = Math.floor(Math.random()*16777215).toString(16);\n    setRandomColor(color)\n  }\n  // var randomColor = Math.floor(Math.random()*16777215).toString(16);\n\n  return (\n    <main style={{backgroundColor: `#${randomColor}`}}>\n      <Color color={randomColor} handleClick={handleClick} />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}